# https://github.com/grafana/helm-charts/blob/loki-distributed-0.36.0/charts/loki-distributed/values.yaml
distributor:
  replicas: 3
gateway:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: ${secret_name}
      nginx.ingress.kubernetes.io/auth-realm: Loki - Authentication required
    enabled: true
    hosts:
      - host: loki.${zone_name}
        paths:
          - path: "/"
            pathType: Prefix
    tls:
      - hosts:
          - loki.${zone_name}
        secretName: loki-tls
  nginxConfig:
    httpSnippet: |
      client_body_buffer_size 64k;
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  replicas: 3
ingester:
  persistence:
    enabled: true
    size: 20Gi
    storageClass: gp3
  replicas: 3
loki:
  config: |
    auth_enabled: true
    server:
      http_listen_port: 3100
    distributor:
      ring:
        kvstore:
          store: memberlist
    memberlist:
      join_members:
        - {{ include "loki.fullname" . }}-memberlist
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_retain_period: 1m
      max_transfer_retries: 0
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
    schema_config:
      configs:
        - from: 2021-08-11
          store: boltdb-shipper
          object_store: aws
          schema: v11
          index:
            period: 24h
          chunks:
            period: 24h
    storage_config:
      boltdb_shipper:
        shared_store: s3
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
        query_ready_num_days: 7
      aws:
        bucketnames: ${bucket_id}
        region: ${aws_region}
        s3: s3://${aws_region}
        sse_encryption: true
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      retention_deletes_enabled: true
      retention_period: 0s
    query_range:
      align_queries_with_step: true
      max_retries: 5
      split_queries_by_interval: 15m
      cache_results: true
      results_cache:
        cache:
          enable_fifocache: true
          fifocache:
            max_size_items: 1024
            validity: 24h
    frontend_worker:
      frontend_address: {{ include "loki.queryFrontendFullname" . }}:9095
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
      tail_proxy_url: http://{{ include "loki.querierFullname" . }}:3100
    compactor:
      shared_store: filesystem
    ruler:
      storage:
        type: local
        local:
          directory: /etc/loki/rules
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
memcachedChunks:
  enabled: true
  replicas: 3
memcachedFrontend:
  enabled: true
  replicas: 3
memcachedIndexQueries:
  enabled: true
  replicas: 3
memcachedIndexWrites:
  enabled: true
  replicas: 3
prometheusRule:
  labels:
    release: kube-prometheus-stack
  enabled: true
querier:
  persistence:
    enabled: true
    size: 20Gi
    storageClass: gp3
  replicas: 3
queryFrontent:
  replicas: 3
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: ${sa_role_arn}
  name: ${sa_name}
serviceMonitor:
  additionalLabels:
    release: kube-prometheus-stack
  enabled: true
