# https://github.com/grafana/helm-charts/blob/grafana-6.16.0/charts/grafana/values.yaml
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - disableDeletion: false
        editable: true
        folder: Base
        name: base
        options:
          path: /var/lib/grafana/dashboards/base
        orgId: 1
        type: file
dashboards:
  base:
    cert-manager:
      datasource: Prometheus
      gnetId: 11001
      revision: 1
    cluster-autoscaler:
      datasource: Prometheus
      gnetId: 3831
      revision: 1
    ingress-nginx:
      datasource: Prometheus
      gnetId: 9614
      revision: 1
    loki-promtail:
      datasource: Prometheus
      gnetId: 10880
      revision: 1
    monitoring-artist-aws-ebs:
      url: https://raw.githubusercontent.com/monitoringartist/grafana-aws-cloudwatch-dashboards/master/aws-ebs/aws-ebs.json
    monitoring-artist-aws-ec2:
      url: https://raw.githubusercontent.com/monitoringartist/grafana-aws-cloudwatch-dashboards/master/aws-ec2/aws-ec2.json
    monitoring-artist-aws-efs:
      url: https://raw.githubusercontent.com/monitoringartist/grafana-aws-cloudwatch-dashboards/master/aws-efs/aws-efs.json
    monitoring-artist-aws-elb-classic:
      url: https://raw.githubusercontent.com/monitoringartist/grafana-aws-cloudwatch-dashboards/master/aws-elb/aws-elb-classic-lb.json
    monitoring-artist-aws-logs:
      url: https://raw.githubusercontent.com/monitoringartist/grafana-aws-cloudwatch-dashboards/master/aws-logs/aws-logs.json
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
#      - name: Prometheus
#        type: prometheus
#        url: http://prometheus-prometheus-server
#        access: proxy
#        isDefault: true
%{ for name, account_id in account_ids ~}
      - name: Loki ${name}
        type: loki
        url: http://loki:3100
        access: proxy
        version: 1
        jsonData:
          httpHeaderName1: x-scope-orgid
        secureJsonData:
          httpHeaderValue1: "${account_id}"
%{ endfor ~}
      - name: CloudWatch
        type: cloudwatch
        access: proxy
        uid: cloudwatch
        editable: false
        jsonData:
          authType: default
          defaultRegion: ${aws_region}
grafana.ini:
  auth:
    disable_signout_menu: true
    oauth_auto_login: true
  auth.github:
    enabled: true
    allow_sign_up: true
    client_id: ${client_id}
    client_secret: ${client_secret}
    api_url: https://api.github.com/user
    auth_url: https://github.com/login/oauth/authorize
    token_url: https://github.com/login/oauth/access_token
    scopes: user:email,read:org
#    allowed_organizations: ""
#    team_ids: ""
  date_formats:
    default_timezone: browser
    use_browser_locale: true
  users:
    viewers_can_edit: true # https://grafana.com/docs/grafana/latest/administration/configuration/#viewers_can_edit
  server:
    domain: grafana.${zone_name}
    root_url: https://grafana.${zone_name}
imageRenderer:
  enabled: true
ingress:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  enabled: true
  hosts:
    - grafana.${zone_name}
  path: /
  pathType: Prefix
  tls:
    - hosts:
        - grafana.${zone_name}
      secretName: grafana-tls
plugins:
  - grafana-piechart-panel
podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: ${sa_role_arn}
  name: ${sa_name}
serviceMonitor:
  enabled: true
  labels:
    release: kube-prometheus-stack
sidecar:
  dashboards:
    enabled: true
  datasources:
    enabled: true
